{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.jsx","components/error-indicator/index.js","components/error-indicator/error-indicator.jsx","components/bookstore-service-context/bookstore-service-context.jsx","components/hoc/with-bookstore-service.jsx","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.jsx","components/book-list/book-list.jsx","components/book-list/index.js","components/shoping-cart-table/shopping-cart-table.jsx","components/shoping-cart-table/index.js","components/pages/home-page.jsx","components/pages/cart-page.jsx","components/shop-header/index.js","components/shop-header/shop-header.jsx","components/app/index.js","components/app/app.jsx","components/error-boundry/index.js","components/error-boundry/error-boundry.jsx","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","ErrorIndicator","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","role","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","bindActionCreators","mapDispatchToProps","onIncreace","onDecreace","onDelete","ShoppingaCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","CartPage","ShopHeader","to","length","App","numItems","path","exact","component","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrderTotal","quantity","updateOrder","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.63d81d5f.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n\r\n    const { title, author, price, coverImage } = book;\r\n\r\n    return (\r\n        <div className='book-list-item'>\r\n            <div className='book-cover'>\r\n                <img src={coverImage} alt={title} />\r\n            </div>\r\n            <div className='book-details'>\r\n                <span className='book-title'>{title}</span>\r\n                <div className='book-author'>{author}</div>\r\n                <div className='book-price'>{price}$</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className='btn btn-info add-to-cart'>\r\n                    <i className=\"fa fa-cart-plus\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default BookListItem;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error!</div>\r\n};\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n};","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (\r\n                            <Wrapped {...props} bookstoreService={bookstoreService} />\r\n                        );\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer >\r\n        );\r\n\r\n    };\r\n};\r\nexport default withBookstoreService;\r\n","\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    };\r\n};\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    };\r\n};\r\nconst bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\nconst allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\n// const fetchBooksOld = (bookstoreService, dispatch) => () => {\r\n//     dispatch(booksRequested());\r\n//     bookstoreService.getBooks()\r\n//         .then((data) => dispatch(booksLoaded(data)))\r\n//         .catch((err) => dispatch(booksError(err)));\r\n// };\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nexport {\r\n    fetchBooks,\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart\r\n};","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n};\r\nexport default compose;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport BookListItem from '../book-list-item';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport { connect } from 'react-redux';\r\nimport { withBookstoreService } from '../hoc';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\nimport Spinner from '../spinner';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n        <ul className='book-list'>\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem\r\n                                book={book}\r\n                                onAddedToCart={() => onAddedToCart(book.id)} />\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    };\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        };\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />;\r\n        };\r\n\r\n        return <BookList books={books} onAddedToCart={onAddedToCart} />;\r\n    };\r\n};\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n    return { books, loading, error };\r\n};\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    return bindActionCreators({\r\n        fetchBooks: fetchBooks(bookstoreService),\r\n        onAddedToCart: bookAddedToCart\r\n    }, dispatch);\r\n};\r\n// const mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n//     return {\r\n//         // fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n//         fetchBooks: ()=> dispatch(fetchBooks(bookstoreService)()),\r\n//         onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n//     };\r\n// };\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookList from './book-list';\r\n\r\nexport default BookList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart\r\n} from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingaCartTable = ({ items, total, onIncreace, onDecreace, onDelete }) => {\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n        return (\r\n\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onIncreace(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                        <i className=\"fa fa-plus-circle\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onDecreace(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                        <i className=\"fa fa-minus-circle\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n    return (\r\n        <div className='shopping-cart-table'>\r\n            <h2>Your Order</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {items.map(renderRow)}\r\n                </tbody>\r\n\r\n\r\n            </table>\r\n            <div className='total'>\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    onIncreace: bookAddedToCart,\r\n    onDecreace: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingaCartTable);","import ShoppingaCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingaCartTable;","import React from 'react';\r\nimport BookList from '../book-list';\r\nimport ShoppingaCartTable from './../shoping-cart-table';\r\n\r\nconst HomePage = () => {\r\n\r\n    return (\r\n        <>\r\n            <BookList />\r\n            <ShoppingaCartTable />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport ShoppingaCartTable from './../shoping-cart-table';\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <>\r\n            <div>Cart Page</div>\r\n            <ShoppingaCartTable />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartPage;","import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport './shop-header.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst ShopHeader = ({ items, total}) => {\r\n    return (\r\n        <header className='shop-header row'>\r\n            <Link to=\"/bookstore/\" className='logo text-dark'>ReStore</Link>\r\n            <Link to=\"/bookstore/cart\" className=\"shopping-cart\">\r\n                <i className=\"fa fa-shopping-cart\" />\r\n                &nbsp;\r\n                {items.length} items (${total})\r\n            </Link>\r\n        </header>\r\n    );\r\n};\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopHeader);","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch,} from 'react-router-dom';\r\nimport { HomePage, CartPage } from '../pages';\r\nimport ShopHeader from '../shop-header';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role='main' className='container'>\r\n            <ShopHeader numItems={2} total={106} />\r\n            <Switch>\r\n                <Route\r\n                    path='/bookstore/' exact\r\n                    component={HomePage}\r\n                />\r\n                <Route path='/bookstore/cart'\r\n                    component={CartPage}\r\n                />\r\n            </Switch>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false\r\n    };\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    };\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        };\r\n        return this.props.children;\r\n    };\r\n};\r\n","export default class BookstoreService {\r\n\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'The Witcher',\r\n            author: 'A. Sapkowski',\r\n            price: 53,\r\n            coverImage: './image/the_witcher.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Atlas Shrugged',\r\n            author: 'A. Rand',\r\n            price: 33,\r\n            coverImage: './image/atlas.jpg'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // if (Math.random() > 0.75) {\r\n                //     reject(new Error('Something bad happend'));\r\n                //     console.log('This is Math.random() in service');\r\n                // } else {\r\n                    resolve(this.data);\r\n                // };\r\n            }, 700);\r\n        });\r\n    };\r\n};","const updateBookList = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n    };\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state.bookList;\r\n    }\r\n};\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    }\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ];\r\n};\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    //default props\r\n    const { id = book.id, title = book.title, count = 0, total = 0 } = item;\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + book.price * quantity,\r\n    };\r\n};\r\nconst updateOrderTotal = (state, book, quantity) => {\r\n    return state + book.price * quantity;\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems, orderTotal }, } = state;\r\n    const book = books.find(({ id }) => id === bookId);\r\n    const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, quantity);\r\n\r\n    return {\r\n        orderTotal: updateOrderTotal(orderTotal, book, quantity),\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex),\r\n    };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            orderTotal: 0,\r\n            cartItems: [],\r\n        };\r\n    }\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(\r\n                ({ id }) => id === action.payload\r\n            );\r\n            return updateOrder(state, action.payload, -item.count);\r\n\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n};\r\n\r\nexport default updateShoppingCart;\r\n","\r\nimport updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst logMiddleware = ({ getState }) => (next) => (action) => {\r\n    // const logMiddleware = (store) => (dispatch) => (action) => {\r\n    // const logMiddleware = (store, dispatch) => (action) => {\r\n\r\n    console.log(action.type, getState());\r\n    return next(action);\r\n};\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    // const stringMiddleware = () => (next) => (action) => { next or dispatch\r\n    // () or (state) or ({getState, dispatch})\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    };\r\n    return next(action);\r\n};\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n// store.dispatch('HELLO_WORLD');\r\n\r\n// const myAction = (dispatch) => {\r\n//     setTimeout(() => dispatch({\r\n//         type: 'DELAYED_ACTION'\r\n//     }), 2000);\r\n// };\r\n\r\n// const delayedActionCreator = (timeout) => (dispatch) => {\r\n//     setTimeout(() => dispatch({\r\n//         type: 'DELAYED_ACTION_CREATOR'\r\n//     }), timeout);\r\n// };\r\n\r\n\r\n// store.dispatch(myAction);\r\n// store.dispatch(delayedActionCreator(3500));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <BookstoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}